openapi: 3.0.0
info:
  title: Event API
  description: API for managing events (renginiai) in the system
  version: 1.0.0
servers:
  - url: http://localhost:8000/api

paths:
  /renginiai:
    get:
      summary: Get all events
      description: Retrieve a list of all events in the system.
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /renginys/{id}:
    get:
      summary: Get an event by ID
      description: Retrieve a specific event by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the event to retrieve.
      responses:
        '200':
          description: A specific event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

    put:
      summary: Update an event by ID
      description: Update the details of an existing event.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the event to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated successfully
        '404':
          description: Event not found

    delete:
      summary: Delete an event by ID
      description: Delete a specific event by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the event to delete.
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found

  /renginys:
    post:
      summary: Create a new event
      description: Add a new event to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created successfully
        '400':
          description: Missing or invalid parameters
        '409':
          description: An event with the given ID already exists

  /vieta/{id}/renginiai:
    get:
      summary: Get events by place ID
      description: Retrieve all events that are associated with a specific place.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the place whose events are being retrieved.
      responses:
        '200':
          description: A list of events for the given place
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '404':
          description: No events found for this place

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Concert
        start_date:
          type: string
          format: date
          example: "2024-10-17"
        start_time:
          type: string
          format: time
          example: "19:00"
        end_date:
          type: string
          format: date
          example: "2024-10-17"
        end_time:
          type: string
          format: time
          example: "21:00"
        place_id:
          type: integer
          example: 1
        price:
          type: number
          format: float
          example: 20.00
        max_tickets:
          type: integer
          example: 500
        description:
          type: string
          example: "A great live concert event."
      required:
        - name
        - start_date
        - start_time
        - end_date
        - end_time
        - place_id
        - price
        - max_tickets