openapi: 3.0.0
info:
  title: Ticket API
  description: API for managing tickets (bilietai) in the system
  version: 1.0.0
servers:
  - url: http://localhost:8000/api

paths:
  /bilietai:
    get:
      summary: Get all tickets
      description: Retrieve a list of all tickets in the system.
      responses:
        '200':
          description: A list of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

  /bilietas/{id}:
    get:
      summary: Get a ticket by ID
      description: Retrieve a specific ticket by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the ticket to retrieve.
      responses:
        '200':
          description: A specific ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

    put:
      summary: Update a ticket by ID
      description: Update the details of an existing ticket.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the ticket to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: Ticket updated successfully
        '404':
          description: Ticket not found

    delete:
      summary: Delete a ticket by ID
      description: Delete a specific ticket by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the ticket to delete.
      responses:
        '204':
          description: Ticket deleted successfully
        '404':
          description: Ticket not found

  /bilietas:
    post:
      summary: Create a new ticket
      description: Add a new ticket to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully
        '400':
          description: Missing or invalid parameters
        '409':
          description: A ticket with the given ID already exists

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: integer
          example: 1
        event_id:
          type: integer
          example: 2
        user_id:
          type: integer
          example: 5
        status:
          type: string
          enum: [active, inactive, cancelled]
          example: active
        purchase_date:
          type: string
          format: date
          example: "2024-10-17"
        seat_number:
          type: string
          example: "A10"
        price:
          type: number
          format: float
          example: 50.00
      required:
        - event_id
        - user_id
        - purchase_date
        - price